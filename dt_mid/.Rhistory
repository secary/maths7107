library('inspectdf')
library('tidyverse')
source("C:/Users/secar/OneDrive/UOA/mds2024t2/7107/dt_mid/dtmid.R")
library('car')
msleep <- data('msleep')
data('msleep')
data('mpg')
force(mpg)
force(msleep)
View(msleep)
View(mpg)
mpg
msleep
source("C:/Users/secar/OneDrive/UOA/mds2024t2/7107/dt_mid/dtmid.R")
facet_wrap()?
face_wrap?
help("facet_wrap")
help('unique')
x <- c(3:5, 11:8, 8 + 0:5)
(ux <- unique(x))
(u2 <- unique(x, fromLast = TRUE)) # different order
stopifnot(identical(sort(ux), sort(u2)))
str_match("I have 120 watermelons, which weigh 501.35kgs", "(501.\\d+)")
str_match("I have 120 watermelons, which weigh 501.35kgs", "501.(\\d+)")
str_match("I have 120 watermelons, which weigh 501.35kgs", "(\\d35)")
str_match("I have 120 watermelons, which weigh 501.35kgs", "(\\d+kg)")
str_match("I have 120 watermelons, which weigh 501.35kgs", "(\\d+)kgs")
msleep
View(msleep)
mean(msleep$sleep_total)
View(msleep)
View(mpg)
View(msleep)
carnivora <- filter(msleep, order == '
Carnivora')
View(carnivora)
carnivora <- tibble(filter(msleep, order == 'Carnivora'))
View(carnivora)
mean(carnivora$sleep_total)
summary(msleep)
summary(msleep$bodywt)
summary(msleep$awake)
41.750-0.174
ggplot(msleep,aes(vore, sleep_total))+
geom_boxplot()
median <- tibble(filter(msleep, sleep_total == 10.10))
View(median)
summary(msleep$sleep_total)
View(mpg)
mpg
lm_cty <- lm(disp ~ cty, mpg)
lm_cty <- lm(displ ~ cty, mpg)
summary(lm_cty)
lm_cty <- lm(cty ~ displ, mpg)
mpg
lm_cty <- lm(cty ~ displ, mpg)
summary(lm_cty)
View(mpg)
pred_value <- tibble(displ = 1.9)
ggplot(mpg,aes(x = displ, y = cty))+
geom_point()+
geom_smooth(method = 'lm')
predict(lm_cty,pred_value,interval = 'confidence', 0.99)
predict(lm_cty,pred_value,interval = 'prediction', 0.95)
predict(lm_cty,pred_value,interval = 'confidence', 0.9)
lm_m <- lm(cty~displ+drv)
summary(lm_m)
lm_m <- lm(cty ~ displ+drv,mpg)
summary(lm_m)
predict(lm_m,pred_value,interval = 'confidence', 0.9)
pred_value <- tibble(displ = 1.9,drv = 'f')
predict(lm_m,pred_value,interval = 'confidence', 0.9)
anova(lm_m)
25.9915 -2.6305*1.8
mean(filter(mpg$displ == 1.8)$cty)
displ <- tibble(filter(mpg$displ == 1.8))
mean(displ$cty)
displ <- tibble(filter(mpg$displ == 1.8))
displ <- tibble(filter(mpg,displ == 1.8))
mean(displ$cty)
ggplot(mpg,aes(x = displ + drv, y = cty))+
geom_point()+
geom_smooth(method = "lm")
ggplot(mpg,aes(x = displ, drv, y = cty))+
geom_point()+
geom_smooth(method = "lm")
ggplot(mpg,aes(x = displ, cty, col = drv))+
geom_point()+
geom_smooth(method = "lm")
lm_m <- lm(cty ~ displ+drv+displ:drv,mpg)
lm_m <- lm(cty ~ displ+drv+displ:drv,mpg)
summary(lm_m)
lm_m <- lm(cty ~ displ+drv,mpg)
summary(lm_m)
pred_value <- tibble(displ = 1.9,drv = 'f')
predict(lm_m,pred_value,interval = 'confidence', 0.9)
anova(lm_m)
displ <- tibble(filter(mpg,displ == 1.8))
mean(displ$cty)
ggplot(mpg,aes(x = displ, cty, col = drv))+
geom_point()+
geom_smooth(method = "lm")
mpg
lm_cty <- lm(cty ~ displ, mpg)
summary(lm_cty)
ggplot(mpg,aes(x = displ, y = cty))+
geom_point()+
geom_smooth(method = 'lm')
pred_value <- tibble(displ = 1.9)
predict(lm_cty,pred_value,interval = 'confidence', 0.99)
predict(lm_cty,pred_value,interval = 'prediction', 0.95)
predict(lm_cty,pred_value,interval = 'confidence', 0.9)
lm_m <- lm(cty ~ displ+drv,mpg)
summary(lm_m)
pred_value <- tibble(displ = 1.9,drv = 'f')
predict(lm_m,pred_value,interval = 'confidence', 0.9)
anova(lm_m)
displ <- tibble(filter(mpg,displ == 1.8))
mean(displ$cty)
ggplot(mpg,aes(x = displ, cty, col = drv))+
geom_point()+
geom_smooth(method = "lm")
source("C:/Users/secar/OneDrive/UOA/mds2024t2/7107/dt_mid/dtmid.R")
library('tidyverse')
library('inspectdf')
library('car')
data('msleep')
msleep
data('mpg')
mpg
x <- c(3:5, 11:8, 8 + 0:5)
(ux <- unique(x))
(u2 <- unique(x, fromLast = TRUE)) # different order
stopifnot(identical(sort(ux), sort(u2)))
str_match("I have 120 watermelons, which weigh 501.35kgs", "(\\d+)kgs")
msleep
mean(msleep$sleep_total)
carnivora <- tibble(filter(msleep, order == 'Carnivora'))
mean(carnivora$sleep_total)
summary(msleep$bodywt)
summary(msleep$awake)
41.750-0.174
ggplot(msleep,aes(vore, sleep_total))+
geom_boxplot()
summary(msleep$sleep_total)
median <- tibble(filter(msleep, sleep_total == 10.10))
mpg
lm_cty <- lm(cty ~ displ, mpg)
summary(lm_cty)
ggplot(mpg,aes(x = displ, y = cty))+
geom_point()+
geom_smooth(method = 'lm')
pred_value <- tibble(displ = 1.9)
predict(lm_cty,pred_value,interval = 'confidence', 0.99)
predict(lm_cty,pred_value,interval = 'prediction', 0.95)
predict(lm_cty,pred_value,interval = 'confidence', 0.9)
lm_m <- lm(cty ~ displ+drv,mpg)
summary(lm_m)
pred_value <- tibble(displ = 1.9,drv = 'f')
predict(lm_m,pred_value,interval = 'confidence', 0.9)
anova(lm_m)
displ <- tibble(filter(mpg,displ == 1.8))
mean(displ$cty)
ggplot(mpg,aes(x = displ, cty, col = drv))+
geom_point()+
geom_smooth(method = "lm")
lm_m <- lm(cty ~ displ+drv,mpg)
summary(lm_m)
pred_value <- tibble(displ = 1.9,drv = 'f')
predict(lm_m,pred_value,interval = 'confidence', 0.9)
anova(lm_m)
displ <- tibble(filter(mpg,displ == 1.8))
mean(displ$cty)
ggplot(mpg,aes(x = displ, cty, col = drv))+
geom_point()+
geom_smooth(method = "lm")
predict(lm_cty,pred_value,interval = 'confidence', 0.9)
predict(lm_cty,pred_value,interval = 'confidence', 0.95)
predict(lm_cty,pred_value,interval = 'confidence', 0.9)
predict(lm_cty,pred_value,interval = 'prediction', 0.9)
predict(lm_cty,pred_value,interval = 'confidence', 0.9)
mpg
lm_cty <- lm(cty ~ displ, mpg)
summary(lm_cty)
predict(lm_cty,pred_value,interval = 'confidence', 0.99)
mpg
lm_cty <- lm(cty ~ displ, mpg)
summary(lm_cty)
ggplot(mpg,aes(x = displ, y = cty))+
geom_point()+
geom_smooth(method = 'lm')
pred_value <- tibble(displ = 1.9)
predict(lm_cty,pred_value,interval = 'confidence', 0.99)
lm_cty <- lm(cty ~ displ, mpg)
summary(lm_cty)
ggplot(mpg,aes(x = displ, y = cty))+
geom_point()+
geom_smooth(method = 'lm')
pred_value <- tibble(displ = 1.9)
predict(lm_cty,pred_value,interval = 'confidence', 0.9)
pred_value <- tibble(displ = 1.90)
predict(lm_cty,pred_value,interval = 'confidence', 0.9)
predict(lm_m,pred_value,interval = 'confidence', 0.9)
lm_m <- lm(cty ~ displ+drv,mpg)
summary(lm_m)
pred_value <- tibble(displ = 1.9,drv = 'f')
predict(lm_m,pred_value,interval = 'confidence', 0.9)
pred_value <- tibble(displ = 1.90, drv = 'f')
pred_value <- tibble(displ = 1.90, drv = 'f')
predict(lm_cty,pred_value,interval = 'confidence', 0.9)
library('tidyverse')
library('inspectdf')
library('car')
data('msleep')
msleep
data('mpg')
mpg
x <- c(3:5, 11:8, 8 + 0:5)
(ux <- unique(x))
(u2 <- unique(x, fromLast = TRUE)) # different order
stopifnot(identical(sort(ux), sort(u2)))
str_match("I have 120 watermelons, which weigh 501.35kgs", "(\\d+)kgs")
msleep
mean(msleep$sleep_total)
carnivora <- tibble(filter(msleep, order == 'Carnivora'))
mean(carnivora$sleep_total)
summary(msleep$bodywt)
summary(msleep$awake)
41.750-0.174
ggplot(msleep,aes(vore, sleep_total))+
geom_boxplot()
summary(msleep$sleep_total)
median <- tibble(filter(msleep, sleep_total == 10.10))
mpg
lm_cty <- lm(cty ~ displ, mpg)
summary(lm_cty)
ggplot(mpg,aes(x = displ, y = cty))+
geom_point()+
geom_smooth(method = 'lm')
pred_value <- tibble(displ = 1.90, drv = 'f')
predict(lm_cty,pred_value,interval = 'confidence', 0.9)
lm_m <- lm(cty ~ displ+drv,mpg)
summary(lm_m)
pred_value <- tibble(displ = 1.9,drv = 'f')
predict(lm_m,pred_value,interval = 'confidence', 0.9)
anova(lm_m)
displ <- tibble(filter(mpg,displ == 1.8))
mean(displ$cty)
ggplot(mpg,aes(x = displ, cty, col = drv))+
geom_point()+
geom_smooth(method = "lm")
pred_value <- tibble(displ = 1.90, drv = 'f')
predict(lm_cty,pred_value,interval = 'confidence', 0.9)
pred_value <- tibble(displ = 1.90, drv = 'f')
predict(lm_cty,pred_value,interval = 'confidence', 0.9)
View(pred_value)
mpg
lm_cty <- lm(cty ~ displ, mpg)
summary(lm_cty)
# Load necessary libraries
library(ggplot2)
# Load the mpg dataset
data(mpg)
# Fit the linear model
model <- lm(cty ~ displ, data = mpg)
# Summary of the model to understand the coefficients
summary(model)
# Predict the city fuel efficiency for an engine size of 1.9L
prediction <- predict(model, newdata = data.frame(displ = 1.9), interval = "confidence", level = 0.90)
# Extract the predicted value and the confidence interval
predicted_cty <- prediction[1]
conf_interval <- prediction[2:3]
# Print the results
cat(sprintf("Predicted city fuel efficiency for 1.9L engine: %.2f\n", predicted_cty))
cat(sprintf("90%% Confidence Interval: [%.2f, %.2f]\n", conf_interval[1], conf_interval[2]))
source("C:/Users/secar/OneDrive/chtholly/pearl_habour/7107/dt_mid/dtmid.R")
mpg
lm_cty <- lm(cty ~ displ, mpg)
summary(lm_cty)
ggplot(mpg,aes(x = displ, y = cty))+
geom_point()+
geom_smooth(method = 'lm')
pred_value <- tibble(displ = 1.90, drv = 'f')
predict(lm_cty,pred_value,interval = 'confidence', 0.9)
mpg
lm_cty <- lm(cty ~ displ, mpg)
summary(lm_cty)
ggplot(mpg,aes(x = displ, y = cty))+
geom_point()+
geom_smooth(method = 'lm')
pred_value <- tibble(displ = 1.90, drv = 'f')
predict(lm_cty,pred_value,interval = 'confidence', 0.9)
pred_value <- tibble(displ = 1.90)
pred_value <- tibble(displ = 1.90)
predict(lm_cty,pred_value,interval = 'confidence', level = 0.9)
source("C:/Users/secar/OneDrive/chtholly/pearl_habour/7107/dt_mid/dtmid.R")
